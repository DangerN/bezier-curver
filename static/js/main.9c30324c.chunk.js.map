{"version":3,"sources":["components/Header.jsx","components/Graph.jsx","components/Settings.jsx","components/Instructions.jsx","components/Output.jsx","useAppState.jsx","App.js","serviceWorker.js","index.js","resources/noinfomeme.jpg"],"names":["Header","props","infoOpen","dispatch","className","id","onClick","type","src","noinfomeme","alt","Graph","handleOne","multiplier","handleTwo","initialState","x","y","draggingPointId","useState","graphState","setGraphState","handleMouseDown","pointId","handleMouseUp","xmlns","viewBox","onMouseMove","event","clientX","clientY","svgRect","currentTarget","getBoundingClientRect","svgX","left","svgY","top","viewBoxX","width","viewBoxY","height","xPosition","clamp","yPosition","handleMouseMove","onMouseUp","onMouseLeave","fill","stroke","strokeWidth","x1","y1","x2","y2","d","cx","cy","r","onMouseDown","defaultProps","Settings","animationSpeed","onChange","speed","parseFloat","target","value","min","max","step","style","display","disabled","handleMultiplierClick","newMultiplier","parseInt","exec","multiplierButtons","Instructions","alignSelf","color","Output","animation","animationDuration","animationTimingFunction","useAppState","useReducer","state","action","toFixed","console","log","Error","autoPlay","App","appState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9c30324c.chunk.js","sourcesContent":["import React from 'react'\nimport noinfomeme from '../resources/noinfomeme.jpg'\nconst Header = props => {\n  const {infoOpen, dispatch} = props\n  return (\n    <header className={infoOpen ? 'infoOpen' : 'infoClosed'}>\n      <div id='pog'>\n        <div onClick={()=>dispatch({type: 'toggleInfo'})} id='infocon'>â“˜</div>\n        <img id='meme' src={noinfomeme} alt='no info available'/>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport clamp from 'lodash.clamp'\n\nconst Graph = (props) => {\n  const {dispatch, multiplier, handleOne, handleTwo} = props\n  const initialState = {\n    handleOne: {\n      x: handleOne.x*100+25,\n      y: ((-(handleOne.y*100))+275)\n    },\n    handleTwo: {\n      x: handleTwo.x*100+25,\n      y: ((-(handleTwo.y*100))+275)\n    },\n    draggingPointId: null\n  }\n  const [ graphState, setGraphState ] = useState(initialState)\n  const handleMouseDown = (pointId) => {\n    setGraphState({...graphState, draggingPointId: pointId})\n  }\n  const handleMouseUp = (pointId) => {\n    setGraphState({...graphState, draggingPointId: null})\n  }\n  const handleMouseMove = (event) => {\n    const { draggingPointId } = graphState\n    if(!draggingPointId) {return}\n    const {clientX, clientY} = event\n    const svgRect = event.currentTarget.getBoundingClientRect()\n    const svgX = clientX - svgRect.left\n    const svgY = clientY - svgRect.top\n    const viewBoxX = svgX * 150 / svgRect.width;\n    const viewBoxY = svgY * 450 / svgRect.height;\n    const xPosition = clamp(viewBoxX, 25, 125)\n    const yPosition = clamp(viewBoxY, 15, 435)\n    setGraphState({...graphState, [draggingPointId]: {x: xPosition, y: yPosition}})\n    dispatch({\n      type: draggingPointId,\n      x: xPosition,\n      y: yPosition\n    })\n  }\n  const path = () =>\n  {\n    return (`\n      M 25, 275\n      C ${graphState.handleOne.x},${graphState.handleOne.y}\n        ${graphState.handleTwo.x},${graphState.handleTwo.y}\n        125,175\n    `)\n  }\n  return (\n    <svg className='graph'\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 150 450`}\n      onMouseMove={event=>{handleMouseMove(event)}}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseUp}>\n      <rect className='graphBody' x='25' y='175' height='100' width='100' fill='none' stroke='black' strokeWidth='2'/>\n      <line className='graphBody' x1={graphState.handleOne.x} y1={graphState.handleOne.y} x2='25' y2='275' stroke='black' strokeWidth='2'/>\n      <line className='graphBody' x1={graphState.handleTwo.x} y1={graphState.handleTwo.y} x2='125' y2='175' stroke='black' strokeWidth='2'/>\n      <path className='curveLine' stroke='red' fill='none'\n      d={path()}\n      />\n      <circle className='anchor' cx='25' cy='275' r='5' fill='red'/>\n      <circle className='anchor' cx='125' cy='175' r='5' fill='red'/>\n      <circle className='handle' cx={graphState.handleOne.x} cy={graphState.handleOne.y} r='10' fill='hotpink' onMouseDown={()=>{handleMouseDown('handleOne')}}/>\n      <circle className='handle' cx={graphState.handleTwo.x} cy={graphState.handleTwo.y} r='10' fill='hotpink' onMouseDown={()=>{handleMouseDown('handleTwo')}}/>\n    </svg>\n  )\n}\n\nexport default Graph\n\nGraph.defaultProps = {\n  handleOne: {x: 0.25, y: 0.25},\n  handleTwo: {x: 0.75, y: 0.75},\n  multiplier: 1,\n}\n","import React from 'react'\n\nconst Settings = props => {\n  const {dispatch, multiplier, animationSpeed} = props\n  const behaviorButtons = () => {\n    return (\n      <div className='behaviorButtons' style={{display: 'none'}}>\n        <input type='button' value='Auto' disabled></input>\n        <input type='button' value='Manual' disabled></input>\n      </div>\n    )\n  }\n  const speedSlider = () => {\n    const handleSliderChange = event => {\n      dispatch({type: 'changeAnimationSpeed', speed: parseFloat(event.target.value)})\n    }\n    return (\n      <div className='speedSlider'>\n        <div>Speed: {animationSpeed}s</div>\n        <input onChange={handleSliderChange} value={animationSpeed} type='range' min='0.25' max='8' step='0.25'></input>\n      </div>\n    )\n  }\n  const multiplierButtons = () => {\n    const handleMultiplierClick = event => {\n      let newMultiplier = parseInt(/(\\d)x/.exec(event.target.value)[1])\n      dispatch({type: 'changeMultiplier', multiplier: newMultiplier})\n    }\n    return (\n      <div style={{display: 'none'}} className='multiplierButtons'>\n        <input type='button' value='1x' disabled onClick={handleMultiplierClick}/>\n        <input type='button' value='2x' disabled onClick={handleMultiplierClick}/>\n        <input type='button'value='5x' disabled onClick={handleMultiplierClick}/>\n      </div>\n    )\n  }\n  return (\n    <div className='controls'>\n      {speedSlider()}\n      {behaviorButtons()}\n      {multiplierButtons()}\n    </div>\n  )\n}\n\nexport default Settings\n","import React from 'react'\n\nconst Instructions = (props) => {\n  const {handleOne, handleTwo, multiplier} = props\n  const controlCoordinates = () => {\n    return (\n      <section style={{alignSelf: 'center'}}>\n        cubic-bezier({handleOne.x},  {handleOne.y*multiplier},  {handleTwo.x},  {handleTwo.y*multiplier}) <br/>\n        <p style={{color: 'grey'}}>prototype: cubic-bezier(x1, y1, x2, y2)</p>\n      </section>\n    )\n  }\n  const instructions = () => {\n    return (\n      <p>\n        This page helps visualize the cubic-bezier animation timing funtion. The values specified are control points. There some things to note about the cubic-bezier in the context of CSS.\n        <br/>\n        <br/>\n        The x-axis represents the beginning and end of the animation. Valid x values are between 0 and 1.\n        <br/>\n        The y-axis represents how complete the animation is. Both positive and negative value are valid.\n        <br/>\n        <br/>\n        The function can make an animation go past its end values generating some interesting effects. Generated values will be clamped if they fall outside valid ranges for the specified rule. For example opacity will be clamped between 0 and 1 even if the function specifies differently.\n      </p>\n    )\n  }\n  return (\n    <div className='instructions'>\n      {controlCoordinates()}\n      {instructions()}\n    </div>\n  )\n}\n\nexport default Instructions\n","import React, { useState, useEffect} from 'react'\n\nconst Output = props => {\n  const {handleOne, handleTwo, multiplier, animationSpeed} = props\n  const animation = {\n    animationDuration: `${animationSpeed}s`,\n    animationTimingFunction: `cubic-bezier(${handleOne.x}, ${handleOne.y*multiplier}, ${handleTwo.x}, ${handleTwo.y*multiplier})`,\n  }\n  return (\n    <div className='output'>\n      <div\n        className='box'\n        style={animation}/>\n      <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={'0 0 12 12'}\n      id='circle'\n      style={animation}>\n        <circle cx='6' cy='6' r='5' fill='red'/>\n      </svg>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={'0 0 10 10'}\n        id='cross'\n        style={animation}>\n        <line fill='green' stroke='purple' strokeWidth='4' x1='0' y1='5' x2='10' y2='5' />\n        <line fill='green' stroke='purple' strokeWidth='4' x1='5' y1='0' x2='5' y2='10' />\n        <circle cx='5' cy='2' r='1' fill='white' />\n      </svg>\n      <div\n        id='ghostBox'\n        style={animation}/>\n      <div\n        id='colorBox'\n        style={animation}/>\n    </div>\n  )\n}\n\nexport default Output\n","import { useReducer } from 'react'\n\nfunction useAppState() {\n  const initialState = {\n    handleOne: {x: 0.25, y: 0.25},\n    handleTwo: {x: 0.75, y: 0.75},\n    multiplier: 1,\n    animationSpeed: 2,\n    autoPlay: true,\n    infoOpen: false\n  }\n  function scalePositions(positions) {\n    return positions\n  }\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'handleOne':\n        return {...state, [action.type]: {\n          x: ((action.x-25)/100).toFixed(2),\n          y: ((-(action.y-275))/100).toFixed(2)*state.multiplier\n        }}\n      case 'handleTwo':\n        return {...state, [action.type]: {\n          x: ((action.x-25)/100).toFixed(2),\n          y: ((-(action.y-275))/100).toFixed(2)*state.multiplier\n        }}\n      case 'changeMultiplier':\n        return {...state, multiplier: action.multiplier}\n      case 'changeAnimationSpeed':\n        return {...state, animationSpeed: action.speed}\n      case 'toggleInfo':\n        return {...state, infoOpen: !state.infoOpen}\n      default:\n        console.log('wowee an error', action);\n        throw new Error()\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return [state, dispatch]\n}\n\nexport default useAppState\n","import React from 'react';\nimport Header from './components/Header'\nimport Graph from './components/Graph'\nimport Settings from './components/Settings'\nimport Instructions from './components/Instructions'\nimport Output from './components/Output'\nimport useAppState from './useAppState'\n\nfunction App() {\n  const [appState, dispatch] = useAppState()\n  return (\n    <div className=\"App\">\n      <Header infoOpen={appState.infoOpen} dispatch={dispatch}/>\n      <Graph dispatch={dispatch} multiplier={appState.multiplier}/>\n      <Settings dispatch={dispatch} {...appState}/>\n      <Instructions {...appState}/>\n      <Output {...appState}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/noinfomeme.ac8133af.jpg\";"],"sourceRoot":""}