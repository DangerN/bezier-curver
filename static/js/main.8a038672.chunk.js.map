{"version":3,"sources":["components/Header.jsx","components/Graph.jsx","components/Settings.jsx","components/Instructions.jsx","components/Output.jsx","useAppState.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Graph","props","dispatch","multiplier","handleOne","handleTwo","initialState","x","y","draggingPointId","useState","graphState","setGraphState","handleMouseDown","pointId","handleMouseUp","className","xmlns","viewBox","onMouseMove","event","clientX","clientY","svgRect","currentTarget","getBoundingClientRect","svgX","left","svgY","top","viewBoxX","width","viewBoxY","height","xPosition","clamp","yPosition","type","handleMouseMove","onMouseUp","onMouseLeave","fill","stroke","strokeWidth","x1","y1","x2","y2","cx","cy","r","d","console","log","onMouseDown","defaultProps","Settings","animationSpeed","onChange","speed","parseFloat","target","value","min","max","step","disabled","handleMultiplierClick","newMultiplier","parseInt","exec","onClick","multiplierButtons","Instructions","Output","animation","animationDuration","animationTimingFunction","style","id","useAppState","useReducer","state","action","toFixed","Error","autoPlay","App","appState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wMAUeA,EARA,WACb,OACE,mD,0kBCDJ,IAAMC,EAAQ,SAACC,GAAW,IACjBC,EAA8CD,EAA9CC,SAAUC,EAAoCF,EAApCE,WAAYC,EAAwBH,EAAxBG,UAAWC,EAAaJ,EAAbI,UAClCC,EAAe,CACnBF,UAAW,CACTG,EAAe,IAAZH,EAAUG,EAAM,GACnBC,GAAmB,IAAZJ,EAAUI,EAAQ,KAE3BH,UAAW,CACTE,EAAe,IAAZF,EAAUE,EAAM,GACnBC,GAAmB,IAAZH,EAAUG,EAAQ,KAE3BC,gBAAiB,MAXI,EAaeC,mBAASJ,GAbxB,mBAafK,EAbe,KAaHC,EAbG,KAcjBC,EAAkB,SAACC,GACvBF,EAAc,EAAD,GAAKD,EAAL,CAAiBF,gBAAiBK,MAE3CC,EAAgB,SAACD,GACrBF,EAAc,EAAD,GAAKD,EAAL,CAAiBF,gBAAiB,SAoCjD,OACE,yBAAKO,UAAU,QACbC,MAAM,6BACNC,QAAO,cACPC,YAAa,SAAAC,IAtCO,SAACA,GAAW,IAC1BX,EAAoBE,EAApBF,gBACR,GAAIA,EAAJ,CAFiC,IAG1BY,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,QACVC,EAAUH,EAAMI,cAAcC,wBAC9BC,EAAOL,EAAUE,EAAQI,KACzBC,EAAON,EAAUC,EAAQM,IACzBC,EAAkB,IAAPJ,EAAaH,EAAQQ,MAChCC,EAAkB,IAAPJ,EAAaL,EAAQU,OAChCC,EAAYC,IAAML,EAAU,GAAI,KAChCM,EAAYD,IAAMH,EAAU,GAAI,KACtCpB,EAAc,EAAD,GAAKD,EAAL,eAAkBF,EAAkB,CAACF,EAAG2B,EAAW1B,EAAG4B,MACnElC,EAAS,CACPmC,KAAM5B,EACNF,EAAG2B,EACH1B,EAAG4B,KAuBkBE,CAAgBlB,IACrCmB,UAAWxB,EACXyB,aAAczB,GACd,0BAAMR,EAAE,KAAKC,EAAE,MAAMyB,OAAO,MAAMF,MAAM,MAAMU,KAAK,OAAOC,OAAO,QAAQC,YAAY,MACrF,0BAAMC,GAAIjC,EAAWP,UAAUG,EAAGsC,GAAIlC,EAAWP,UAAUI,EAAGsC,GAAG,KAAKC,GAAG,MAAML,OAAO,QAAQC,YAAY,MAC1G,0BAAMC,GAAIjC,EAAWN,UAAUE,EAAGsC,GAAIlC,EAAWN,UAAUG,EAAGsC,GAAG,MAAMC,GAAG,MAAML,OAAO,QAAQC,YAAY,MAC3G,4BAAQK,GAAG,KAAKC,GAAG,MAAMC,EAAE,IAAIT,KAAK,QACpC,4BAAQO,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIT,KAAK,QACrC,0BAAMC,OAAO,MAAMD,KAAK,OACxBU,GA3BFC,QAAQC,IAAI1C,EAAWP,UAAUI,EAAEL,EAAYQ,EAAWN,UAAUG,EAAEL,GAChE,8BAAN,OAEMQ,EAAWP,UAAUG,EAF3B,YAEgCI,EAAWP,UAAUI,EAFrD,qBAGMG,EAAWN,UAAUE,EAH3B,YAGgCI,EAAWN,UAAUG,EAHrD,8BA4BE,4BAAQQ,UAAU,SAASgC,GAAIrC,EAAWP,UAAUG,EAAG0C,GAAItC,EAAWP,UAAUI,EAAG0C,EAAE,KAAKT,KAAK,UAAUa,YAAa,WAAKzC,EAAgB,gBAC3I,4BAAQG,UAAU,SAASgC,GAAIrC,EAAWN,UAAUE,EAAG0C,GAAItC,EAAWN,UAAUG,EAAG0C,EAAE,KAAKT,KAAK,UAAUa,YAAa,WAAKzC,EAAgB,kBAKlIb,IAEfA,EAAMuD,aAAe,CACnBnD,UAAW,CAACG,EAAG,IAAMC,EAAG,KACxBH,UAAW,CAACE,EAAG,IAAMC,EAAG,KACxBL,WAAY,GCjFd,IA4CeqD,EA5CE,SAAAvD,GAAU,IAClBC,EAAwCD,EAAxCC,SAAsBuD,GAAkBxD,EAA9BE,WAA8BF,EAAlBwD,gBAkC7B,OACE,yBAAKzC,UAAU,aAtBfoC,QAAQC,IAAII,GAEV,yBAAKzC,UAAU,eACb,2BAAO0C,SANgB,SAAAtC,GACzBlB,EAAS,CAACmC,KAAM,uBAAwBsB,MAAOC,WAAWxC,EAAMyC,OAAOC,UAKhCA,MAAOL,EAAgBpB,KAAK,QAAQ0B,IAAI,OAAOC,IAAI,KAAKC,KAAK,SAClG,6BAAMR,KAdR,yBAAKzC,UAAU,mBACb,2BAAOqB,KAAK,SAASyB,MAAM,OAAOI,UAAQ,IAC1C,2BAAO7B,KAAK,SAASyB,MAAM,SAASI,UAAQ,KAgBxB,WACxB,IAAMC,EAAwB,SAAA/C,GAC5B,IAAIgD,EAAgBC,SAAS,QAAQC,KAAKlD,EAAMyC,OAAOC,OAAO,IAC9D5D,EAAS,CAACmC,KAAM,mBAAoBlC,WAAYiE,KAElD,OACE,yBAAKpD,UAAU,qBACb,2BAAOqB,KAAK,SAASyB,MAAM,KAAKS,QAASJ,IACzC,2BAAO9B,KAAK,SAASyB,MAAM,KAAKS,QAASJ,IACzC,2BAAO9B,KAAK,SAAQyB,MAAM,KAAKS,QAASJ,KAQzCK,KCvBQC,EAhBM,SAACxE,GAAW,IACxBG,EAAoCH,EAApCG,UAAWC,EAAyBJ,EAAzBI,UAAyBJ,EAAdE,WAQ7B,OACE,yBAAKa,UAAU,gBANb,iCACGZ,EAAUG,EADb,KACkBH,EAAUI,EAD5B,KACiCH,EAAUE,EAD3C,KACgDF,EAAUG,EAD1D,IAC6D,gCCsBpDkE,EA3BA,SAAAzE,GAAU,IAChBG,EAAoDH,EAApDG,UAAWC,EAAyCJ,EAAzCI,UAAWF,EAA8BF,EAA9BE,WAAYsD,EAAkBxD,EAAlBwD,eACzCL,QAAQC,IAAII,GACZ,IAAMkB,EAAY,CAEhBC,kBAAkB,GAAD,OAAKnB,EAAL,KACjBoB,wBAAwB,gBAAD,OAAkBzE,EAAUG,EAA5B,aAAkCH,EAAUI,EAAEL,EAA9C,aAA6DE,EAAUE,EAAvE,aAA6EF,EAAUG,EAAEL,EAAzF,MAEzB,OACE,yBAAKa,UAAU,UACb,yBACEA,UAAU,MACV8D,MAAOH,GAFT,SAMA,yBACA1D,MAAM,6BACNC,QAAS,YACT6D,GAAG,SACHD,MAAOH,GACL,4BAAQ3B,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIT,KAAK,W,mjBCe1BuC,MApCf,WAAuB,MAgCKC,qBArB1B,SAAiBC,EAAOC,GACtB,OAAQA,EAAO9C,MACb,IAAK,YAKL,IAAK,YACH,OAAO,KAAI6C,EAAX,eAAmBC,EAAO9C,KAAO,CAC/B9B,IAAK4E,EAAO5E,EAAE,IAAI,KAAK6E,QAAQ,GAC/B5E,KAAO2E,EAAO3E,EAAE,KAAM,KAAK4E,QAAQ,GAAGF,EAAM/E,cAEhD,IAAK,mBACH,OAAO,KAAI+E,EAAX,CAAkB/E,WAAYgF,EAAOhF,aACvC,IAAK,uBACH,OAAO,KAAI+E,EAAX,CAAkBzB,eAAgB0B,EAAOxB,QAC3C,QAEE,MADAP,QAAQC,IAAI,iBAAkB8B,GACxB,IAAIE,QA5BK,CACnBjF,UAAW,CAACG,EAAG,IAAMC,EAAG,KACxBH,UAAW,CAACE,EAAG,IAAMC,EAAG,KACxBL,WAAY,EACZsD,eAAgB,EAChB6B,UAAU,IANS,mBAiCrB,MAAO,CAjCc,YCmBRC,MAbf,WAAgB,IAAD,EACgBP,IADhB,mBACNQ,EADM,KACItF,EADJ,KAEb,OACE,yBAAKc,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOd,SAAUA,EAAUC,WAAYqF,EAASrF,aAChD,kBAAC,EAAD,eAAUD,SAAUA,GAAcsF,IAClC,kBAAC,EAAiBA,GAClB,kBAAC,EAAWA,KCJEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.8a038672.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header>\n      Im the header!\n    </header>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport clamp from 'lodash.clamp'\n\nconst Graph = (props) => {\n  const {dispatch, multiplier, handleOne, handleTwo} = props\n  const initialState = {\n    handleOne: {\n      x: handleOne.x*100+25,\n      y: ((-(handleOne.y*100))+275)\n    },\n    handleTwo: {\n      x: handleTwo.x*100+25,\n      y: ((-(handleTwo.y*100))+275)\n    },\n    draggingPointId: null\n  }\n  const [ graphState, setGraphState ] = useState(initialState)\n  const handleMouseDown = (pointId) => {\n    setGraphState({...graphState, draggingPointId: pointId})\n  }\n  const handleMouseUp = (pointId) => {\n    setGraphState({...graphState, draggingPointId: null})\n  }\n  const handleMouseMove = (event) => {\n    const { draggingPointId } = graphState\n    if(!draggingPointId) {return}\n    const {clientX, clientY} = event\n    const svgRect = event.currentTarget.getBoundingClientRect()\n    const svgX = clientX - svgRect.left\n    const svgY = clientY - svgRect.top\n    const viewBoxX = svgX * 150 / svgRect.width;\n    const viewBoxY = svgY * 450 / svgRect.height;\n    const xPosition = clamp(viewBoxX, 25, 125)\n    const yPosition = clamp(viewBoxY, 15, 435)\n    setGraphState({...graphState, [draggingPointId]: {x: xPosition, y: yPosition}})\n    dispatch({\n      type: draggingPointId,\n      x: xPosition,\n      y: yPosition\n    })\n  }\n  const path = () =>\n  {\n    console.log(graphState.handleOne.y*multiplier, graphState.handleTwo.y*multiplier);\n    return (`\n      M 25, 275\n      C ${graphState.handleOne.x},${graphState.handleOne.y}\n        ${graphState.handleTwo.x},${graphState.handleTwo.y}\n        125,175\n    `)\n  }\n  // const path = `\n  //   M 25, 275\n  //   C ${graphState.handleOne.x},${graphState.handleOne.y*multiplier}\n  //     ${graphState.handleTwo.x},${graphState.handleTwo.y*multiplier}\n  //     125,175\n  // `\n  return (\n    <svg className='graph'\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 150 450`}\n      onMouseMove={event=>{handleMouseMove(event)}}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseUp}>\n      <rect x='25' y='175' height='100' width='100' fill='none' stroke='black' strokeWidth='2'/>\n      <line x1={graphState.handleOne.x} y1={graphState.handleOne.y} x2='25' y2='275' stroke='black' strokeWidth='2'/>\n      <line x1={graphState.handleTwo.x} y1={graphState.handleTwo.y} x2='125' y2='175' stroke='black' strokeWidth='2'/>\n      <circle cx='25' cy='275' r='5' fill='red'/>\n      <circle cx='125' cy='175' r='5' fill='red'/>\n      <path stroke='red' fill='none'\n      d={path()}\n      />\n      <circle className='handle' cx={graphState.handleOne.x} cy={graphState.handleOne.y} r='10' fill='hotpink' onMouseDown={()=>{handleMouseDown('handleOne')}}/>\n      <circle className='handle' cx={graphState.handleTwo.x} cy={graphState.handleTwo.y} r='10' fill='hotpink' onMouseDown={()=>{handleMouseDown('handleTwo')}}/>\n    </svg>\n  )\n}\n\nexport default Graph\n\nGraph.defaultProps = {\n  handleOne: {x: 0.25, y: 0.25},\n  handleTwo: {x: 0.75, y: 0.75},\n  multiplier: 1,\n}\n","import React from 'react'\n\nconst Settings = props => {\n  const {dispatch, multiplier, animationSpeed} = props\n  const behaviorButtons = () => {\n    return (\n      <div className='behaviorButtons'>\n        <input type='button' value='Auto' disabled></input>\n        <input type='button' value='Manual' disabled></input>\n      </div>\n    )\n  }\n  const speedSlider = () => {\n    const handleSliderChange = event => {\n      dispatch({type: 'changeAnimationSpeed', speed: parseFloat(event.target.value)})\n    }\n    console.log(animationSpeed);\n    return (\n      <div className='speedSlider'>\n        <input onChange={handleSliderChange} value={animationSpeed} type='range' min='0.25' max='12' step='0.25'></input>\n        <div>{animationSpeed}</div>\n      </div>\n    )\n  }\n  const multiplierButtons = () => {\n    const handleMultiplierClick = event => {\n      let newMultiplier = parseInt(/(\\d)x/.exec(event.target.value)[1])\n      dispatch({type: 'changeMultiplier', multiplier: newMultiplier})\n    }\n    return (\n      <div className='multiplierButtons'>\n        <input type='button' value='1x' onClick={handleMultiplierClick}/>\n        <input type='button' value='2x' onClick={handleMultiplierClick}/>\n        <input type='button'value='5x' onClick={handleMultiplierClick}/>\n      </div>\n    )\n  }\n  return (\n    <div className='controls'>\n      {speedSlider()}\n      {behaviorButtons()}\n      {multiplierButtons()}\n    </div>\n  )\n}\n\nexport default Settings\n","import React from 'react'\n\nconst Instructions = (props) => {\n  const {handleOne, handleTwo, multiplier} = props\n  const controlCoordinates = () => {\n    return (\n      <section>\n        {handleOne.x}  {handleOne.y}  {handleTwo.x}  {handleTwo.y} <br/>\n      </section>\n    )\n  }\n  return (\n    <div className='instructions'>\n      {controlCoordinates()}\n    </div>\n  )\n}\n\nexport default Instructions\n","import React, { useState, useEffect} from 'react'\n\nconst Output = props => {\n  const {handleOne, handleTwo, multiplier, animationSpeed} = props\n  console.log(animationSpeed);\n  const animation = {\n    // animationDuration: 2s,\n    animationDuration: `${animationSpeed}s`,\n    animationTimingFunction: `cubic-bezier(${handleOne.x}, ${handleOne.y*multiplier}, ${handleTwo.x}, ${handleTwo.y*multiplier})`,\n  }\n  return (\n    <div className='output'>\n      <div\n        className='box'\n        style={animation}\n      >\n        bepis\n      </div>\n      <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={'0 0 10 10'}\n      id='circle'\n      style={animation}>\n        <circle cx='5' cy='5' r='5' fill='red'/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Output\n","import { useReducer } from 'react'\n\nfunction useAppState() {\n  const initialState = {\n    handleOne: {x: 0.25, y: 0.25},\n    handleTwo: {x: 0.75, y: 0.75},\n    multiplier: 1,\n    animationSpeed: 2,\n    autoPlay: true\n  }\n  function scalePositions(positions) {\n    return positions\n  }\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'handleOne':\n        return {...state, [action.type]: {\n          x: ((action.x-25)/100).toFixed(2),\n          y: ((-(action.y-275))/100).toFixed(2)*state.multiplier\n        }}\n      case 'handleTwo':\n        return {...state, [action.type]: {\n          x: ((action.x-25)/100).toFixed(2),\n          y: ((-(action.y-275))/100).toFixed(2)*state.multiplier\n        }}\n      case 'changeMultiplier':\n        return {...state, multiplier: action.multiplier}\n      case 'changeAnimationSpeed':\n        return {...state, animationSpeed: action.speed}\n      default:\n        console.log('wowee an error', action);\n        throw new Error()\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return [state, dispatch]\n}\n\nexport default useAppState\n","import React from 'react';\nimport Header from './components/Header'\nimport Graph from './components/Graph'\nimport Settings from './components/Settings'\nimport Instructions from './components/Instructions'\nimport Output from './components/Output'\nimport useAppState from './useAppState'\n\nfunction App() {\n  const [appState, dispatch] = useAppState()\n  return (\n    <div className=\"App\">\n      <Header />\n      <Graph dispatch={dispatch} multiplier={appState.multiplier}/>\n      <Settings dispatch={dispatch} {...appState}/>\n      <Instructions {...appState}/>\n      <Output {...appState}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}